C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2024 21:06:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          
   4          typedef unsigned char uchar;
   5          typedef unsigned int uint;
   6          typedef unsigned long ulint;
   7          
   8          sbit Key2 = P3^0;
   9          sbit Key3 = P3^1;
  10          sbit Key4 = P3^2;
  11          sbit Key5 = P3^3;
  12          
  13          sbit DU = P2^6;
  14          sbit WE = P2^7;
  15          
  16          uchar Data[] = {
  17                              0x3F,0x06,0x5B,0x4f,0x66,
  18                              0x6D,0x7D,0x07,0x7F,0x6F, 
  19                              0x77,0x7C,0x39,0x5E,0x79,  
  20                              0x71,0x76,0x38,0x40,0x00 
  21                          };
  22          
  23          typedef enum sequence
  24          {
  25              First,
  26              Second,
  27              Third,
  28              Fourth,
  29              Fifth,
  30              Sixth,
  31              Seventh,
  32              Eighth   
  33          }sequence;
  34          
  35          void delay(uint span)
  36          {
  37   1          uint i = 0;
  38   1          uint j = 0;
  39   1          for(i=0;i<span;i++)
  40   1          {
  41   2              for(j=0;j<144;j++);
  42   2          }
  43   1      }
  44          
  45          void SegmentDisplayInit(void)
  46          {
  47   1          P0 = 0xff;
  48   1          WE = 1;
  49   1          WE = 0;
  50   1      }
  51          
  52          #define DELAY//打开使用延迟法判断按键状态，关闭使用计数法判断按键状态
  53          
  54          #ifdef DELAY
C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2024 21:06:56 PAGE 2   

  55          
  56          void iskey(ulint* num)
  57          {
  58   1          if(Key2 == 0)
  59   1          {
  60   2              delay(20);
  61   2              if(Key2 == 0)
  62   2              {
  63   3                  (*num)--;
  64   3                  while(Key2 == 0);
  65   3              }
  66   2          }
  67   1          if(Key3 == 0)
  68   1          {
  69   2              delay(20);
  70   2              if(Key3 == 0)
  71   2              {
  72   3                  (*num)++;
  73   3                  while(Key3 == 0);
  74   3              }
  75   2          }
  76   1      }
  77          
  78          #else
              
              void iskey(ulint* num)
              {
                  uchar count = 0x00;
                  while(count < 0x05)
                  {
                      if(Key2 == 0)
                      {
                          count++;
                      }
                      else
                      {
                          count = 0;
                      }
                      delay(1);
                  }
                  if(count == 0x05)
                  {
                      (*num)++;
                  }
              
                  count = 0x00;
                  while(count < 0x05)
                  {
                      if(Key3 == 0)
                      {
                          count++;
                      }
                      else
                      {
                          count = 0;
                      }
                      delay(1);
                  }
                  if(count == 0x05)
                  {
                      (*num)--;
                  }
C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2024 21:06:56 PAGE 3   

              }
              
              #endif
 120          
 121          uchar digit(ulint* value)
 122          {
 123   1          uchar ret = 0;
 124   1          ret = *value % 10 + 48;
 125   1          *value = *value / 10;
 126   1          return ret;
 127   1      }
 128          
 129          void stdout(uint value,sequence serial)
 130          {
 131   1          uchar position = 0xfe;
 132   1          P0 = 0x00;
 133   1          DU = 1;
 134   1          DU = 0;
 135   1          P0 = _crol_(position,(uint)serial);
 136   1          WE = 1;
 137   1          WE = 0;
 138   1          P0 = Data[value];
 139   1          DU = 1;
 140   1          DU = 0;
 141   1      }
 142          
 143          void Display(ulint number)
 144          {
 145   1          uint eighth = (uint)(digit(&number) - '0');
 146   1          uint seventh = (uint)(digit(&number) - '0');
 147   1          uint sixth = (uint)(digit(&number) - '0');
 148   1          uint fifth = (uint)(digit(&number) - '0');
 149   1          uint fourth = (uint)(digit(&number) - '0');
 150   1          uint third = (uint)(digit(&number) - '0');
 151   1          uint second = (uint)(digit(&number) - '0');
 152   1          uint first = (uint)(digit(&number) - '0');  
 153   1          uchar i = 0;
 154   1          uchar j = 0;
 155   1          for(i=0;i<3000;i++)
 156   1          {
 157   2              for(j=0;j<144;j++)
 158   2              {
 159   3                      stdout(first,First);
 160   3                      stdout(second,Second);
 161   3                      stdout(third,Third);
 162   3                      stdout(fourth,Fourth);
 163   3                      stdout(fifth,Fifth);
 164   3                      stdout(sixth,Sixth);
 165   3                      stdout(seventh,Seventh);
 166   3                      stdout(eighth,Eighth);
 167   3              }
 168   2          }
 169   1      }
 170          
 171          void main()
 172          {
 173   1          ulint number = 65534;
 174   1          SegmentDisplayInit();
 175   1          while(1)
 176   1          {
 177   2              iskey(&number);
 178   2              Display(number);
C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2024 21:06:56 PAGE 4   

 179   2          }
 180   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    483    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
